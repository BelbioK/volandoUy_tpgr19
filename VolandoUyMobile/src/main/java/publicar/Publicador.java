
package publicar;

import javax.xml.datatype.XMLGregorianCalendar;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "Publicador", targetNamespace = "http://publicar/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Publicador {


    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtListaString
     * @throws DatoInvalido_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarRutasDeVueloRequest", output = "http://publicar/Publicador/listarRutasDeVueloResponse", fault = {
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/listarRutasDeVuelo/Fault/DatoInvalido")
    })
    public DtListaString listarRutasDeVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws DatoInvalido_Exception
    ;

    /**
     * 
     * @return
     *     returns publicar.DtListaVuelos
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarAllDTVuelosRequest", output = "http://publicar/Publicador/listarAllDTVuelosResponse")
    public DtListaVuelos listarAllDTVuelos();

    /**
     * 
     * @return
     *     returns publicar.DtListaAerolineas
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarAerolineasDTRequest", output = "http://publicar/Publicador/listarAerolineasDTResponse")
    public DtListaAerolineas listarAerolineasDT();

    /**
     * 
     * @return
     *     returns publicar.DtListaPaquetes
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarDTPaquetesRequest", output = "http://publicar/Publicador/listarDTPaquetesResponse")
    public DtListaPaquetes listarDTPaquetes();

    /**
     * 
     * @return
     *     returns publicar.DtListaUsuarios
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarUsuariosDTRequest", output = "http://publicar/Publicador/listarUsuariosDTResponse")
    public DtListaUsuarios listarUsuariosDT();

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns publicar.DtListaCompraRutas
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarPaquetesCompradosParaVueloRequest", output = "http://publicar/Publicador/listarPaquetesCompradosParaVueloResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/listarPaquetesCompradosParaVuelo/Fault/InstanciaNoExiste")
    })
    public DtListaCompraRutas listarPaquetesCompradosParaVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtListaRutas
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarRutasDeAerolineaRequest", output = "http://publicar/Publicador/listarRutasDeAerolineaResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/listarRutasDeAerolinea/Fault/InstanciaNoExiste")
    })
    public DtListaRutas listarRutasDeAerolinea(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtListaReservas
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/getReservasDeUsuarioRequest", output = "http://publicar/Publicador/getReservasDeUsuarioResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/getReservasDeUsuario/Fault/InstanciaNoExiste")
    })
    public DtListaReservas getReservasDeUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns publicar.DtReserva
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/infoReservaRequest", output = "http://publicar/Publicador/infoReservaResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/infoReserva/Fault/InstanciaNoExiste")
    })
    public DtReserva infoReserva(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtRutasDeVuelo
     * @throws DatoInvalido_Exception
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/getRutaDeVueloRequest", output = "http://publicar/Publicador/getRutaDeVueloResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/getRutaDeVuelo/Fault/InstanciaNoExiste"),
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/getRutaDeVuelo/Fault/DatoInvalido")
    })
    public DtRutasDeVuelo getRutaDeVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws DatoInvalido_Exception, InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtListaVuelos
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarVuelosDTDeRutaRequest", output = "http://publicar/Publicador/listarVuelosDTDeRutaResponse")
    public DtListaVuelos listarVuelosDTDeRuta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtVuelo
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/mostrarInfoVueloRequest", output = "http://publicar/Publicador/mostrarInfoVueloResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/mostrarInfoVuelo/Fault/InstanciaNoExiste")
    })
    public DtVuelo mostrarInfoVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/checkNicknameRequest", output = "http://publicar/Publicador/checkNicknameResponse")
    public boolean checkNickname(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/checkEmailRequest", output = "http://publicar/Publicador/checkEmailResponse")
    public boolean checkEmail(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws InstanciaNoExiste_Exception
     * @throws InstanciaRepetida_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/checkInRequest", output = "http://publicar/Publicador/checkInResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/checkIn/Fault/InstanciaNoExiste"),
        @FaultAction(className = InstanciaRepetida_Exception.class, value = "http://publicar/Publicador/checkIn/Fault/InstanciaRepetida")
    })
    public void checkIn(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InstanciaNoExiste_Exception, InstanciaRepetida_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns publicar.DtUsuario
     * @throws DatoInvalido_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/loginRequest", output = "http://publicar/Publicador/loginResponse", fault = {
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/login/Fault/DatoInvalido")
    })
    public DtUsuario login(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws DatoInvalido_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns publicar.DtCliente
     * @throws DatoInvalido_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/loginMobileRequest", output = "http://publicar/Publicador/loginMobileResponse", fault = {
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/loginMobile/Fault/DatoInvalido")
    })
    public DtCliente loginMobile(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws DatoInvalido_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/comenzarSeguirRequest", output = "http://publicar/Publicador/comenzarSeguirResponse")
    public void comenzarSeguir(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/dejarSeguirRequest", output = "http://publicar/Publicador/dejarSeguirResponse")
    public void dejarSeguir(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/loSigoRequest", output = "http://publicar/Publicador/loSigoResponse")
    public boolean loSigo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtListaUsuarios
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/getSeguidoresRequest", output = "http://publicar/Publicador/getSeguidoresResponse")
    public DtListaUsuarios getSeguidores(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtListaUsuarios
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/getSeguidosRequest", output = "http://publicar/Publicador/getSeguidosResponse")
    public DtListaUsuarios getSeguidos(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/tienePaqueteRequest", output = "http://publicar/Publicador/tienePaqueteResponse")
    public boolean tienePaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/vuelosPendientesRequest", output = "http://publicar/Publicador/vuelosPendientesResponse")
    public boolean vuelosPendientes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/modificarEstadoRequest", output = "http://publicar/Publicador/modificarEstadoResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/modificarEstado/Fault/InstanciaNoExiste")
    })
    public void modificarEstado(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        Estado arg1)
        throws InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/esRutaPropiaRequest", output = "http://publicar/Publicador/esRutaPropiaResponse")
    public boolean esRutaPropia(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod(operationName = "AgregarVisitaRuta")
    @Action(input = "http://publicar/Publicador/AgregarVisitaRutaRequest", output = "http://publicar/Publicador/AgregarVisitaRutaResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/AgregarVisitaRuta/Fault/InstanciaNoExiste")
    })
    public void agregarVisitaRuta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtBusquedaRutaYPaquete
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/busquedaGeneralRequest", output = "http://publicar/Publicador/busquedaGeneralResponse")
    public DtBusquedaRutaYPaquete busquedaGeneral(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/aplicaBusquedaRequest", output = "http://publicar/Publicador/aplicaBusquedaResponse")
    public boolean aplicaBusqueda(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/hacerPDFRequest", output = "http://publicar/Publicador/hacerPDFResponse")
    public void hacerPDF(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @throws InstanciaRepetida_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/ingresarDatosAerolineaRequest", output = "http://publicar/Publicador/ingresarDatosAerolineaResponse", fault = {
        @FaultAction(className = InstanciaRepetida_Exception.class, value = "http://publicar/Publicador/ingresarDatosAerolinea/Fault/InstanciaRepetida")
    })
    public void ingresarDatosAerolinea(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        XMLGregorianCalendar arg7)
        throws InstanciaRepetida_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @throws DatoInvalido_Exception
     * @throws InstanciaNoExiste_Exception
     * @throws InstanciaRepetida_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/altaVueloRequest", output = "http://publicar/Publicador/altaVueloResponse", fault = {
        @FaultAction(className = InstanciaRepetida_Exception.class, value = "http://publicar/Publicador/altaVuelo/Fault/InstanciaRepetida"),
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/altaVuelo/Fault/InstanciaNoExiste"),
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/altaVuelo/Fault/DatoInvalido")
    })
    public void altaVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        XMLGregorianCalendar arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        XMLGregorianCalendar arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8)
        throws DatoInvalido_Exception, InstanciaNoExiste_Exception, InstanciaRepetida_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg10
     * @param arg11
     * @param arg12
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @throws DatoInvalido_Exception
     * @throws InstanciaNoExiste_Exception
     * @throws InstanciaRepetida_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/altaRutaVueloRequest", output = "http://publicar/Publicador/altaRutaVueloResponse", fault = {
        @FaultAction(className = InstanciaRepetida_Exception.class, value = "http://publicar/Publicador/altaRutaVuelo/Fault/InstanciaRepetida"),
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/altaRutaVuelo/Fault/InstanciaNoExiste"),
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/altaRutaVuelo/Fault/DatoInvalido")
    })
    public void altaRutaVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9,
        @WebParam(name = "arg10", partName = "arg10")
        String arg10,
        @WebParam(name = "arg11", partName = "arg11")
        String arg11,
        @WebParam(name = "arg12", partName = "arg12")
        String arg12)
        throws DatoInvalido_Exception, InstanciaNoExiste_Exception, InstanciaRepetida_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg10
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @throws InstanciaRepetida_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/ingresarDatosClienteRequest", output = "http://publicar/Publicador/ingresarDatosClienteResponse", fault = {
        @FaultAction(className = InstanciaRepetida_Exception.class, value = "http://publicar/Publicador/ingresarDatosCliente/Fault/InstanciaRepetida")
    })
    public void ingresarDatosCliente(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        XMLGregorianCalendar arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        TipoDocumento arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9,
        @WebParam(name = "arg10", partName = "arg10")
        XMLGregorianCalendar arg10)
        throws InstanciaRepetida_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtUsuario
     * @throws DatoInvalido_Exception
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/mostrarInfoUsuariosRequest", output = "http://publicar/Publicador/mostrarInfoUsuariosResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/mostrarInfoUsuarios/Fault/InstanciaNoExiste"),
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/mostrarInfoUsuarios/Fault/DatoInvalido")
    })
    public DtUsuario mostrarInfoUsuarios(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws DatoInvalido_Exception, InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @return
     *     returns publicar.DtListaString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarUsuariosRequest", output = "http://publicar/Publicador/listarUsuariosResponse")
    public DtListaString listarUsuarios();

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @throws DatoInvalido_Exception
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/modificarClienteRequest", output = "http://publicar/Publicador/modificarClienteResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/modificarCliente/Fault/InstanciaNoExiste"),
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/modificarCliente/Fault/DatoInvalido")
    })
    public void modificarCliente(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        XMLGregorianCalendar arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        TipoDocumento arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7)
        throws DatoInvalido_Exception, InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @throws DatoInvalido_Exception
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/modificarAerolineaRequest", output = "http://publicar/Publicador/modificarAerolineaResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/modificarAerolinea/Fault/InstanciaNoExiste"),
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/modificarAerolinea/Fault/DatoInvalido")
    })
    public void modificarAerolinea(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4)
        throws DatoInvalido_Exception, InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @throws DatoInvalido_Exception
     * @throws InstanciaNoExiste_Exception
     * @throws InstanciaRepetida_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/altaReservaRequest", output = "http://publicar/Publicador/altaReservaResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/altaReserva/Fault/InstanciaNoExiste"),
        @FaultAction(className = DatoInvalido_Exception.class, value = "http://publicar/Publicador/altaReserva/Fault/DatoInvalido"),
        @FaultAction(className = InstanciaRepetida_Exception.class, value = "http://publicar/Publicador/altaReserva/Fault/InstanciaRepetida")
    })
    public void altaReserva(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        Asiento arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        XMLGregorianCalendar arg6)
        throws DatoInvalido_Exception, InstanciaNoExiste_Exception, InstanciaRepetida_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicar.DtPaquete
     * @throws InstanciaNoExiste_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/infoPaqueteRequest", output = "http://publicar/Publicador/infoPaqueteResponse", fault = {
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/infoPaquete/Fault/InstanciaNoExiste")
    })
    public DtPaquete infoPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws InstanciaNoExiste_Exception
    ;

    /**
     * 
     * @return
     *     returns publicar.DtListaString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarPaquetesNombresRequest", output = "http://publicar/Publicador/listarPaquetesNombresResponse")
    public DtListaString listarPaquetesNombres();

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @throws InstanciaNoExiste_Exception
     * @throws InstanciaRepetida_Exception
     */
    @WebMethod
    @Action(input = "http://publicar/Publicador/altaCompraPaqueteRequest", output = "http://publicar/Publicador/altaCompraPaqueteResponse", fault = {
        @FaultAction(className = InstanciaRepetida_Exception.class, value = "http://publicar/Publicador/altaCompraPaquete/Fault/InstanciaRepetida"),
        @FaultAction(className = InstanciaNoExiste_Exception.class, value = "http://publicar/Publicador/altaCompraPaquete/Fault/InstanciaNoExiste")
    })
    public void altaCompraPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2)
        throws InstanciaNoExiste_Exception, InstanciaRepetida_Exception
    ;

    /**
     * 
     * @return
     *     returns publicar.DtListaRutas
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarDTRutasDeVueloRequest", output = "http://publicar/Publicador/listarDTRutasDeVueloResponse")
    public DtListaRutas listarDTRutasDeVuelo();

    /**
     * 
     * @return
     *     returns publicar.DtListaString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarCiudadesRequest", output = "http://publicar/Publicador/listarCiudadesResponse")
    public DtListaString listarCiudades();

    /**
     * 
     * @return
     *     returns publicar.DtListaString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicar/Publicador/listarCategoriasRequest", output = "http://publicar/Publicador/listarCategoriasResponse")
    public DtListaString listarCategorias();

}
